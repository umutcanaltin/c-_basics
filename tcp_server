using System;
using System.Diagnostics;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;

using System.Windows.Forms;

namespace TcpServer
{
    public partial class Form1 : Form
    {   
        TcpListener listener ;
        int port ;
       
        
        public Form1()
        {
            CheckForIllegalCrossThreadCalls = false;
            InitializeComponent();
        }

        private void label2_Click(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

            try
            {
                string ip = entry_ıp.Text;
                this.port = Convert.ToInt32(entry_port.Text);
                IPAddress ıp1 = IPAddress.Parse(ip);
                this.listener = new TcpListener(ıp1, this.port);
                Thread ctThread = new Thread(() => start_server(this.listener));
                ctThread.Start();
                text_sistem.AppendText("\n");
                text_sistem.AppendText("Server Başlatıldı.");
                buton_baslat.Enabled = false;
                


            }
            catch(Exception ex)
            {

                text_hata.AppendText("\n");
                text_hata.AppendText("Port Numarasını Tamsayı Değeri Giriniz!");
                text_hata.AppendText("\n");
                text_hata.AppendText(Convert.ToString(ex));
                buton_baslat.Enabled = true;
            }
        }
        public void start_server(TcpListener listener)
        {
            listener.Start();
            text_sistem.AppendText("\n");
            text_sistem.AppendText("okudu03");

            try
            {
               
                    TcpClient client = listener.AcceptTcpClient();
                    text_sistem.AppendText("\n");
                    text_sistem.AppendText("okudu02");
                    Thread cThread = new Thread(() => start_listen(client));
                    cThread.Start();
                
            }
            catch(Exception ex1)
            {
                text_hata.AppendText("\n");
                text_hata.AppendText(Convert.ToString(ex1));

            }


        }
        public void start_listen(TcpClient client)
        {
            string rasp=" ", mesag=" ", client_ip=" ",saniye =" ";
            int kapandı = 0;
            text_sistem.AppendText("\n");
            text_sistem.AppendText("okudu01");
            Stopwatch watch = new Stopwatch();
            NetworkStream clientStream = client.GetStream();
            byte[] message = new byte[4096];
            int bytesRead=1;
            while (true)
            {
                watch.Start();
                text_sistem.AppendText("\n");
                text_sistem.AppendText("okudu0");

                try
                {
                    bytesRead = clientStream.Read(message, 0, message.Length);
                    text_sistem.AppendText("\n");
                    text_sistem.AppendText("okudu");
                    //blocks until a client sends a message

                    ASCIIEncoding encoder = new ASCIIEncoding();
                    string data = encoder.GetString(message, 0, bytesRead);
                    
                    char split = '=';
                    string[] veri1 = data.Split(split);
                    rasp = veri1[3];
                    mesag = veri1[0];
                    text_sistem.AppendText("\n");
                    text_sistem.AppendText(mesag);
                    text_thread.AppendText("\n");
                    text_thread.AppendText(rasp);
                    byte[] msg = encoder.GetBytes(data);
                    clientStream.Write(msg, 0, msg.Length);

                    IPEndPoint clientIPAddress = (IPEndPoint)client.Client.RemoteEndPoint;
                    client_ip =clientIPAddress.Address.ToString();
                    watch.Stop();
                    
                    saniye = Convert.ToString(watch.Elapsed.Milliseconds);
                   

                }
                catch(Exception ex)
                { 

                    text_hata.AppendText("\n");
                    text_hata.AppendText(Convert.ToString(ex));
                    
                }
                if (bytesRead == 0)
                {
                    text_sistem.AppendText("\n");
                    text_sistem.AppendText("Kanal Kapandı");
                    kapandı = 1;
                   
                }
                try
                {
                    string[] row = new string[] { rasp, client_ip, "3", "4", "5", saniye };
                    dataGridView1.Rows.Add(row);
                }
                catch(Exception ex)
                {
                    text_hata.AppendText("\n");
                    text_hata.AppendText(Convert.ToString(ex));
                    

                }
                
                


            }
        }

        private void buton_kapat_Click(object sender, EventArgs e)
        {
            this.listener.Stop();
            buton_baslat.Enabled = true;
            text_sistem.AppendText("\n");
            text_sistem.AppendText("Server Kapandı.");

        }

        private void button3_Click(object sender, EventArgs e)
        {
            
        }
    }




    
    
}

